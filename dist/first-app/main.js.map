{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/authentication/auth-interceptor.ts","./src/app/authentication/auth.guard.ts","./src/app/authentication/auth.service.ts","./src/app/authentication/login/login.component.ts","./src/app/authentication/login/login.component.html","./src/app/authentication/signup/signup.component.ts","./src/app/authentication/signup/signup.component.html","./src/app/error-interceptor.ts","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/posts/post-create/mime-type.validator.ts","./src/app/posts/post-create/post-create.component.ts","./src/app/posts/post-create/post-create.component.html","./src/app/posts/post-list/post-list.component.ts","./src/app/posts/post-list/post-list.component.html","./src/app/posts/posts.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {PostListComponent} from './posts/post-list/post-list.component';\nimport {PostCreateComponent} from './posts/post-create/post-create.component'\nimport {logincomponent} from \"./authentication/login/login.component\";\nimport {signupcomponent} from \"./authentication/signup/signup.component\";\nimport {AuthGuard} from \"./authentication/auth.guard\";\n\n//const routes: Routes = [];\n\nconst routes: Routes = [\n  //{ path: '' }\n  { path: '', component: PostListComponent } ,\n  {path: 'create', component: PostCreateComponent},\n  { path: 'create', component: PostCreateComponent, canActivate: [AuthGuard]},\n  { path: 'edit/:postId', component: PostCreateComponent},\n  { path: 'edit/:postId', component: PostCreateComponent, canActivate:[AuthGuard]},\n  {path: 'login', component:logincomponent},\n  {path: 'signup', component:signupcomponent}\n];\n\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n  providers:[AuthGuard]\n})\nexport class AppRoutingModule { }\n","import { Component,Input,Output,OnInit } from '@angular/core';\nimport {AuthService} from \"src/app/authentication/auth.service\";\n//import {Post} from './posts/post.model';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent implements OnInit{\n  constructor(private authservice: AuthService){}\n  ngOnInit(){\n\n    this.authservice.autoAuthUser();\n\n  }\n}\n//export class AppComponent {\n  //title = 'hello first-app2';\n//  {title: 'First Post', content:'This is the first post\\'s content'},{title:'dvsd',content:'dsfdsf'}\n/*Storedposts : Post[] = [];\n  onPostAdded(post){\n    this.Storedposts.push(post);\n  }*/\n//}\n","<app-header></app-header>\n<main>\n <router-outlet></router-outlet>\n</main>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {FormsModule,ReactiveFormsModule} from '@angular/forms';\nimport { PostCreateComponent } from './posts/post-create/post-create.component';\nimport {HeaderComponent} from \"./header/header.component\";\nimport {logincomponent} from \"./authentication/login/login.component\";\nimport {AuthInterceptor} from \"./authentication/auth-interceptor\";\n//import {AuthGuard} from \"./authentication/auth.guard\";\nimport {signupcomponent} from \"./authentication/signup/signup.component\";\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport {ErrorInterceptor } from './error-interceptor';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatCardModule } from '@angular/material/card'\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatButtonModule} from '@angular/material/button';\nimport { MatToolbarModule } from '@angular/material/toolbar'\nimport{PostListComponent} from './posts/post-list/post-list.component';\nimport{MatExpansionModule}from '@angular/material/expansion';\nimport {PostService} from './posts/posts.service';\nimport{HttpClientModule, HTTP_INTERCEPTORS} from '@angular/common/http';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport {MatPaginatorModule} from '@angular/material/paginator';\n//import { HttpInterceptor} from '@angular/common/http';\n//import {ReactiveFormsModule, FormsModule} from '@angular/forms';\n//import { PageEvent } from '@angular/material';\n//import {ReactiveFormsModule} from '@angular/forms';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PostCreateComponent,\n    HeaderComponent,\n    PostListComponent,\n   logincomponent,\n   signupcomponent,\n  // AuthService\n\n\n  ],\n  imports: [\n    MatExpansionModule,\n    ReactiveFormsModule,\n    BrowserModule,\n    AppRoutingModule,\n    AppRoutingModule,\n    FormsModule,\n    MatInputModule,\n    MatCardModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatToolbarModule,\n    HttpClientModule,\n    MatProgressSpinnerModule,\n    MatPaginatorModule,\n    //AuthGuard,\n\n\n  ],\n // providers: [],\n providers: [{provide: HTTP_INTERCEPTORS,\n  useClass:AuthInterceptor, multi: true},\n  {provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true}],\n  bootstrap: [AppComponent,PostService]\n})\nexport class AppModule { }\n","import { HttpInterceptor,HttpRequest, HttpHandler} from '@angular/common/http';\r\n//import { Injectable } from '@angular/core';\r\nimport {AuthService} from './auth.service';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor{\r\n\r\n  constructor(private authservice: AuthService){}\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler){\r\n\r\n    const authToken = this.authservice.getToken();\r\n    const authRequest = req.clone({\r\n      headers: req.headers.set(\"authorization\", \"Bearer \"+authToken)\r\n\r\n    });\r\n\r\n    return next.handle(authRequest);\r\n  }\r\n}\r\n","import { Router,CanActivate,ActivatedRouteSnapshot,RouterStateSnapshot,UrlTree} from '@angular/router';\r\nimport { Injectable } from '@angular/core';\r\nimport {AuthService} from \"./auth.service\";\r\nimport {Observable} from 'rxjs';\r\n\r\n\r\n@Injectable({providedIn: \"root\"})\r\nexport class AuthGuard implements CanActivate{\r\n\r\n  constructor(private authService: AuthService, private router:Router){}\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean | UrlTree | Observable<boolean | UrlTree> | Promise<boolean | UrlTree> {\r\n\r\n    const isAuth = this.authService.getIsAuth();\r\n\r\n    if(!isAuth){\r\n\r\n        this.router.navigate(['/login']);\r\n\r\n       }\r\n     return isAuth;\r\n    // throw new Error('Method not implemented.');\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { AuthData } from \"./auth-data.model\";\r\nimport { Subject } from \"rxjs\";\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Injectable({providedIn: \"root\"})\r\nexport class AuthService{\r\n\r\n  //constructor(private http: HttpClient){}\r\n  constructor(private http: HttpClient, private router: Router) {}\r\n\r\n  private token: string;\r\n  private isAuthenticated = false;\r\n\r\n  private authStatusListener = new Subject<boolean>();\r\n  private tokenTimer: any;\r\n\r\n  userId:string;\r\n\r\n\r\n  getToken(){\r\n    return this.token;\r\n  }\r\n\r\n  getIsAuth() {\r\n    return this.isAuthenticated;\r\n  }\r\n\r\n  getAuthStatusListener() {\r\n    return this.authStatusListener.asObservable();\r\n  }\r\n\r\n  CreateUser(email: string, password: string){\r\n\r\n    const authData: AuthData = {email: email, password: password};\r\n\r\n    this.http.post<{ token: string, expireIn: number}>(\"/api/user/signup\",authData)\r\n    .subscribe(response =>{\r\n      const token = response.token;\r\n      this.token = token;\r\n      console.log(response);\r\n      if(token){\r\n        this.isAuthenticated = true;\r\n        this.authStatusListener.next(true);\r\n        this.router.navigate(['/']);\r\n}\r\n\r\n\r\n  });\r\n\r\n  }\r\n  loginUser(email: string, password: string){\r\n    const authData: AuthData= {email: email, password: password};\r\n\r\n   // this.http.post<{ token: string, expiresIn: number}>(\"http://localhost:3000/api/user/login\",authData)\r\n   this.http.post<{ token: string; expiresIn: number, userId: string}>(\"/api/user/login\",authData)\r\n    .subscribe(response => {\r\n      const token = response.token;\r\n      this.token = token;\r\n     // this.expireIn = token1;\r\n      console.log(response);\r\n\r\n      if(token){\r\n        const expiresInDuration = response.expiresIn;\r\n        this.setAuthTimer(expiresInDuration);\r\n        //const expiresInDuration = response.expiresIn;\r\n\r\n        this.tokenTimer=setTimeout(()=>{\r\n          this.logout();\r\n        }, expiresInDuration*1000);\r\n\r\n\r\n\r\n        this.isAuthenticated = true;\r\n        this.userId = response.userId;\r\n        this.authStatusListener.next(true);\r\n\r\n        const now= new Date();\r\n        const expirationDate = new Date(now.getTime()+expiresInDuration*1000);\r\n        //this.saveAuthData(token, expirationDate);\r\n        this.saveAuthData(token, expirationDate, this.userId);\r\n        this.router.navigate(['/']);\r\n}\r\n      //this.isAuthenticated = true;\r\n      //this.authStatusListener.next(true);\r\n    });\r\n  }\r\n\r\n  getUserId(){\r\n    return this.userId;\r\n  }\r\n\r\n  logout(){\r\n    this.token = null;\r\n    this.userId = null;\r\n    this.isAuthenticated = false;\r\n    this.authStatusListener.next(false);\r\n    //this.router.navigate(['/']);\r\n    this.clearAuthData();\r\n    clearTimeout(this.tokenTimer);\r\n    this.router.navigate(['/login']);\r\n  }\r\n\r\n  private saveAuthData(token: string, expirationDate: Date,userId:string) {\r\n    localStorage.setItem('token', token);\r\n    localStorage.setItem('expiration',expirationDate.toISOString());\r\n    localStorage.setItem('userId', userId);\r\n\r\n  }\r\n  private clearAuthData() {\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"expiration\");\r\n    localStorage.removeItem(\"userId\");\r\n  }\r\n\r\n  autoAuthUser() {\r\n\r\n    const authInformation = this.getAuthData();\r\n    if (!authInformation) {\r\n      return;\r\n    }\r\n    const now = new Date();\r\n    const expiresInDuration = authInformation.expirationDate.getTime() - now.getTime();\r\n   // const isInFuture = authInformation.expirationDate > now;\r\n   if(expiresInDuration > 0){\r\n      this.token = authInformation.token;\r\n      this.isAuthenticated = true;\r\n      this.userId = authInformation.userId\r\n      //this.setAuthTimer(expiresInDuration);\r\n      this.setAuthTimer(expiresInDuration / 1000);\r\n      this.authStatusListener.next(true);\r\n    }\r\n\r\n  }\r\n\r\n\r\n  private getAuthData() {\r\n    const token = localStorage.getItem(\"token\");\r\n    const expirationDate = localStorage.getItem(\"expiration\");\r\n    const userId = localStorage.getItem(\"userId\");\r\n    if(!token|| !expirationDate){\r\n      return;\r\n    }\r\n    return{\r\n      token: token,\r\n    expirationDate: new Date(expirationDate),\r\n    userId: userId\r\n    }\r\n  }\r\n\r\n  private setAuthTimer(duration: number) {\r\n\r\n    this.tokenTimer=setTimeout(()=>{\r\n      this.logout();\r\n    }, duration*1000);\r\n\r\n  }\r\n\r\n}\r\n","import { Component } from '@angular/core';\r\nimport {NgForm} from \"@angular/forms\";\r\nimport {AuthService} from '../auth.service';\r\n\r\n@Component({\r\n // selector: 'app-authentication',\r\n  templateUrl: './login.component.html',\r\n  styleUrls:['./login.component.css']\r\n\r\n})\r\n\r\nexport class logincomponent{\r\n\r\n  public Loading: boolean;\r\n\r\n  constructor(public authservice: AuthService){}\r\n\r\n // onLogin(form:NgForm){\r\n\r\n   // console.log(form.value);\r\n  //}\r\n\r\n  onLogin(form: NgForm){\r\n    if(form.invalid){\r\n      return;\r\n    }\r\n\r\n    this.Loading=true;\r\n    this.authservice.loginUser(form.value.email, form.value.password);\r\n  }\r\n\r\n}\r\n","<mat-card>\r\n  <mat-spinner *ngIf = \"Loading\"></mat-spinner>\r\n  <form (submit) = \"onLogin(loginform)\" #loginform= \"ngForm\" *ngIf = \"!Loading\">\r\n\r\n    <mat-form-field>\r\n      <input\r\n      matInput name= \"email\" ngModel\r\n      type = \"email\"\r\n      placeholder = \"Email Id\" #emailInput= \"ngModel\"\r\n      required email>\r\n      <mat-error *ngIf= \"emailInput.invalid\">Please enter a valid email id</mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field>\r\n      <input\r\n       matInput name= \"password\" ngModel\r\n       type=\"password\"\r\n       placeholder=\"Password\" #passwordInput= \"ngModel\"\r\n      required>\r\n      <mat-error *ngIf= \"passwordInput.invalid\">Please enter a valid password</mat-error>\r\n\r\n  </mat-form-field>\r\n\r\n  <button mat-raised-button color=\"primary\" type=\"submit\" *ngIf= \"!Loading\">Login</button>\r\n<mat-spinner *ngIf= \"Loading\"></mat-spinner>\r\n  </form>\r\n</mat-card>\r\n","\r\nimport { Component } from '@angular/core';\r\nimport {NgForm} from \"@angular/forms\";\r\nimport {AuthService} from \"../auth.service\";\r\n\r\n@Component({\r\n  //selector: 'app-authentication',\r\n  templateUrl: './signup.component.html',\r\n  styleUrls:['./signup.component.css']\r\n\r\n})\r\n\r\nexport class signupcomponent{\r\n\r\n  public Loading: boolean;\r\n //loading = false;\r\n\r\n  constructor(public authService: AuthService){}\r\n\r\n  onSignup(form:NgForm){\r\n\r\n    //console.log(form.value);\r\n    if(form.invalid){\r\n      return;\r\n    }\r\n    this.Loading=true;\r\n    this.authService.CreateUser(form.value.email, form.value.password);\r\n  }\r\n\r\n}\r\n","<mat-card>\r\n  <mat-spinner *ngIf = \"Loading\"></mat-spinner>\r\n  <form (submit) = \"onSignup(loginform)\" #loginform= \"ngForm\" *ngIf = \"!Loading\">\r\n\r\n    <mat-form-field>\r\n      <input\r\n      matInput name= \"email\" ngModel\r\n      type = \"email\"\r\n      placeholder = \"Email Id\" #emailInput= \"ngModel\"\r\n      required email>\r\n      <mat-error *ngIf= \"emailInput.invalid\">Please enter a valid email id</mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field>\r\n      <input\r\n       matInput name= \"password\" ngModel\r\n       type=\"password\"\r\n       placeholder=\"Password\" #passwordInput= \"ngModel\"\r\n      required>\r\n      <mat-error *ngIf= \"passwordInput.invalid\">Please enter a valid password</mat-error>\r\n\r\n  </mat-form-field>\r\n\r\n  <button mat-raised-button color=\"primary\" type=\"submit\" *ngIf= \"!Loading\">signup</button>\r\n<mat-spinner *ngIf= \"Loading\"></mat-spinner>\r\n  </form>\r\n</mat-card>\r\n","import { HttpInterceptor,HttpRequest, HttpHandler,HttpErrorResponse} from '@angular/common/http';\r\nimport {Injectable} from '@angular/core';\r\nimport {catchError} from 'rxjs/operators';\r\nimport {throwError} from 'rxjs';\r\n\r\n\r\n\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n    //return next.handle(req);\r\n    return next.handle(req).pipe(\r\n      catchError((error: HttpErrorResponse) =>{\r\n        console.log(error);\r\n        alert(error.error.message);\r\n        return throwError(error);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Component,OnInit, OnDestroy } from '@angular/core';\r\nimport {AuthService} from \"../authentication/auth.service\";\r\nimport { Subscription } from 'rxjs';\r\n//import {OnInit, OnDestroy } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls:['./header.component.css']\r\n})\r\n\r\n//export class HeaderComponent implements OnInit, OnDestroy  {\r\n\r\n  export class HeaderComponent implements OnInit, OnDestroy{\r\n\r\n\r\n  public userIsAuthenticated = false;\r\n  private authListenerSubs: Subscription;\r\n\r\n    constructor(private authService: AuthService){}\r\n\r\n    ngOnInit(){\r\n      this.userIsAuthenticated = this.authService.getIsAuth();\r\n      this.authListenerSubs = this.authService.getAuthStatusListener()\r\n      .subscribe(isAuthenticated=>{\r\n        this.userIsAuthenticated = isAuthenticated;\r\n      });\r\n    }\r\n\r\n    ngOnDestroy(){\r\n      this.authListenerSubs.unsubscribe();\r\n    }\r\n    onLogout(){\r\n    this.authService.logout();\r\n    }\r\n\r\n}\r\n","<mat-toolbar color= \"primary\">\r\n  <span>\r\n    <a routerLink = \"/\">\r\n      Message\r\n    </a>\r\n</span>\r\n<span class=\"spacer\"></span>\r\n  <ul>\r\n    <li *ngIf = \"userIsAuthenticated\">\r\n          <a mat-button routerLink = \"/create\" routerLinkActive = \"mat-accent\"> New Post</a>\r\n    </li>\r\n    <li *ngIf = \"!userIsAuthenticated\">\r\n          <a mat-button routerLink = \"/login\" routerLinkActive = \"mat-accent\"> Login</a>\r\n\r\n    </li>\r\n    <li *ngIf = \"!userIsAuthenticated\">\r\n          <a mat-button routerLink = \"/signup\" routerLinkActive = \"mat-accent\"> Signup </a>\r\n    </li>\r\n\r\n    <li *ngIf = \"userIsAuthenticated\">\r\n         <button mat-button (click)= \"onLogout()\"> Logout </button>\r\n    </li>\r\n  </ul>\r\n</mat-toolbar>\r\n","import { AbstractControl } from '@angular/forms';\r\nimport { off } from 'process';\r\n\r\nimport { Observable, Observer } from 'rxjs';\r\n\r\nexport const mimetype = (control: AbstractControl): Promise<{[key: string]:any}> | Observable<{[key: string]:any}> => {\r\n\r\n  if(typeof(control.value)== 'string'){\r\n    return off(null);\r\n}\r\n\r\n  const file = control.value as File;\r\n  const filereader = new FileReader();\r\n  let isValid = false;\r\n  let header = \"\";\r\n\r\n // const FRObs = Observable.create();\r\n const FRObs = Observable.create((observer:Observer<{[key: string]:any}>)=>{\r\n\r\n  filereader.addEventListener(\"loadend\", () =>{\r\n\r\n    const arr = new Uint8Array(filereader.result as ArrayBuffer).subarray(0, 4);\r\n\r\n    for(let i=0; i<arr.length; i++){\r\n      header+= arr[i].toString(16);\r\n      switch(header){\r\n        case \"89504e47\":\r\n          isValid = true;\r\n          break;\r\n        case \"ffd8ffe0\":\r\n        case \"ffd8ffe1\":\r\n        case \"ffd8ffe2\":\r\n        case \"ffd8ffe3\":\r\n        case \"ffd8ffe8\":\r\n          isValid = true;\r\n          break;\r\n        default:\r\n          isValid = false; // Or you can use the blob.type as fallback\r\n          break\r\n      }\r\n\r\n    }\r\n    if(isValid){\r\n      observer.next(null);\r\n    }else{\r\n      observer.next({invalidMimeType: true});\r\n    }\r\n    observer.complete();\r\n\r\n  });\r\n\r\n  filereader.readAsArrayBuffer(file);\r\n\r\n});\r\n\r\nreturn FRObs;\r\n\r\n};\r\n","\r\nimport { Component,OnInit } from '@angular/core';\r\nimport {Post} from '../post.model';\r\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\r\nimport {NgForm} from \"@angular/forms\";\r\nimport{PostService} from '../posts.service';\r\nimport { ActivatedRoute,ParamMap } from '@angular/router';\r\nimport {mimetype} from \"./mime-type.validator\";\r\n//import { createBrotliCompress } from 'zlib';\r\n//import {Subscription} from 'rxjs';\r\n//import { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\n\r\n@Component({\r\n  selector: 'app-post-create',\r\n  templateUrl: './post-create.component.html',\r\n  styleUrls:['./post-create.component.css'],\r\n})\r\nexport class PostCreateComponent implements OnInit{\r\n\r\n /* newPost = 'This is a Post';\r\n    onAddPost(postInput: HTMLTextAreaElement){\r\n      this.newPost = postInput.value;\r\n    }*/\r\n    enteredTitle = '';\r\n    enteredContent = '';\r\n    newPost = 'This is a Post';\r\n    private mode= 'create';\r\n    private postId: string;\r\n    public Loading: boolean;\r\n   public post: Post;\r\n   form: FormGroup;\r\n   Pickedimage: string;\r\n    //posts: Post[] = [];\r\n    //@Output() postCreated = new EventEmitter();\r\n   // private PostSub: Subscription;\r\n   constructor(public postsService: PostService, public route:ActivatedRoute){}\r\n   //constructor(public postsService: PostService, public route:ActivatedRoute){}\r\n\r\n\r\n\r\n   ngOnInit(){\r\n\r\n  // this.route.paramMap.subscribe();\r\n  this.form = new FormGroup({\r\n    'title': new FormControl(null, {validators: [Validators.required, Validators.minLength(3)]}),\r\n    'content': new FormControl(null, {validators: [Validators.required]}),\r\n   //'image': new FormControl(null, {validators: [Validators.required]}),\r\n    'image': new FormControl(null, {validators:[Validators.required],asyncValidators:[mimetype]})\r\n  });\r\n   this.route.paramMap.subscribe((paramMap:ParamMap)=>{\r\n    if(paramMap.has('postId')){\r\n      this.mode='edit';\r\n      this.postId = paramMap.get('postId');\r\n     // this.post = this.postsService.getPost(this.postId);\r\n     //Loading = false //This is property\r\n      this.Loading = true;\r\n          this.postsService.getPost(this.postId).subscribe(postData=>{\r\n            this.Loading = false\r\n                this.post = {\r\n                  id: postData._id,\r\n                  title: postData.title,\r\n                  content: postData.content,\r\n                  imagePath: postData.imagePath,\r\n                  //creator: postData._id\r\n                  creator: postData.creator,\r\n                  _id:null\r\n                  },\r\n                 this.form.setValue({\r\n                  title: this.post.title,\r\n                  content: this.post.content,\r\n                  image: this.post.imagePath\r\n                });\r\n\r\n              });\r\n\r\n    }else{\r\n      this.mode = 'create';\r\n      this.postId = null;\r\n    }\r\n  });\r\n\r\n}\r\n\r\n    // onAddPost( form: NgForm){\r\n    //   if(form.invalid){\r\n    //     return;\r\n    //    }\r\n    //    /* const post : Post = {\r\n    //         title: form.value.title,\r\n    //         content: form.value.content\r\n    //     };*/\r\n    //    this.postsService.addPost(form.value.title, form.value.content )\r\n\r\n    //     //this.postCreated.emit(post);\r\n\r\n\r\n    //   }\r\n\r\n\r\n    PickedImage(event: Event){\r\n      const file = (event.target as HTMLInputElement).files[0];\r\n      this.form.patchValue({image: file});\r\n      this.form.get('image').updateValueAndValidity();\r\n      const reader = new FileReader();\r\n      reader.onload = ()=>{\r\n        this.Pickedimage = reader.result as string;\r\n      };\r\n      reader.readAsDataURL(file);\r\n\r\n    }\r\n\r\n\r\n    onAddPost(){\r\n      if(this.form.invalid){\r\n        return;\r\n      }\r\n\r\n      this.Loading = true\r\n      if(this.mode===\"create\"){\r\n        this.postsService.addPost(\r\n          this.form.value.title,\r\n           this.form.value.content,\r\n           this.form.value.image\r\n            );\r\n\r\n      }else{\r\n\r\n        this.postsService.updatePost(\r\n          this.postId,\r\n          this.form.value.title,\r\n          this.form.value.content,\r\n          this.form.value.image\r\n        );\r\n      }\r\n      this.Loading = false\r\n      this.form.reset();\r\n    }\r\n\r\n}\r\n","<mat-card>\r\n  <mat-spinner *ngIf = \"Loading\"></mat-spinner>\r\n    <form [formGroup]= \"form\" (submit) = \"onAddPost()\"  *ngIf = \"!Loading\">\r\n    <mat-form-field>\r\n      <input\r\n      matInput\r\n      type = \"text\"\r\n      formControlName = \"title\"\r\n      placeholder = \"Enter Title Here\">\r\n      <mat-error *ngIf= \"form.get('title').invalid\">This field is required</mat-error>\r\n    </mat-form-field>\r\n      <div>\r\n        <button mat-stroked-button type=\"button\"(click)=\"filepicker.click()\">\r\n          Pick Image\r\n        </button>\r\n        <input type=\"file\" #filepicker (change) = \"PickedImage($event)\">\r\n      </div>\r\n\r\n      <div class = \"image-preview\" *ngIf = \"Pickedimage !== '' && Pickedimage && form.get('image').valid\">\r\n        <img [src]= \"Pickedimage\" [alt]= \"form.value.title\">\r\n\r\n      </div>\r\n      <mat-form-field>\r\n    <textarea\r\n        matInput\r\n        rows = \"6\"\r\n        formControlName = \"content\"\r\n        placeholder = \"Enter Content Here\"></textarea>\r\n        <mat-error *ngIf= \"form.get('content').invalid\">This field is required</mat-error>\r\n    </mat-form-field>\r\n    <button\r\n    mat-raised-button\r\n    color = \"primary\"\r\n    type = \"submit\">Save Post</button>\r\n  </form>\r\n</mat-card>\r\n\r\n\r\n","\r\nimport{PostService} from '../posts.service';\r\nimport {Component,Input, OnInit} from \"@angular/core\";\r\nimport {Subscription} from 'rxjs';\r\nimport {Post} from '../post.model';\r\nimport { PageEvent } from '@angular/material/paginator';\r\nimport {AuthService} from \"src/app/authentication/auth.service\";\r\nimport {Router} from '@angular/router';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Injectable} from '@angular/core';\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-post-list',\r\n  templateUrl: './post-list.component.html',\r\n  styleUrls: ['./post-list.component.css']\r\n})\r\n\r\n\r\n@Injectable({providedIn: 'root'})\r\n\r\nexport class PostListComponent{\r\n\r\n\r\n\r\n  //posts=[{title: 'First Post', content:'This is the first post\\'s content'}];\r\n    //{title: 'First Post', content:'This is the first post\\'s content'},\r\n    //{title: 'Second Post', content:'This is the second post\\'s content'},\r\n    //{title: 'Third Post', content:'This is the third post\\'s content'}\r\n // ];\r\n // @Input() posts = [];\r\n// totalposts= 0;\r\n currentpage= 1;\r\n totalposts = 0;\r\n postperpage = 2;\r\n pageSizeOption = [1, 2, 5, 10];\r\n public Loading: boolean;\r\n posts: Post[] = [];\r\n userId: string;\r\n private PostSub: Subscription;\r\n private authStatusSub: Subscription;\r\n public userIsAuthenticated ;\r\n  //constructor(public postsService: PostService){}\r\n  constructor(public postsService: PostService, private authService: AuthService, private http: HttpClient, private router: Router){}\r\n // constructor(private http: HttpClient, private router: Router){}\r\n\r\n  ngOnInit(){\r\n\r\n   // this.postsService.getPosts();\r\n    //this.posts=this.postsService.getPosts();\r\n    //this.Loading = true;\r\n    this.postsService.getPosts(this.postperpage, this.currentpage);\r\n    this.userId = this.authService.getUserId();\r\n    this.PostSub=this.postsService.getPostUpdateListenetr()//.subscribe((posts: Post[])=>{\r\n      .subscribe((postData:{posts: Post[], postCount:number})=>{\r\n\r\n        //this.Loading = true;\r\n      // this.posts = posts;\r\n      this.posts = postData.posts;\r\n      this.totalposts = postData.postCount;\r\n    });\r\n    this.userIsAuthenticated = this.authService.getIsAuth();\r\n    this.authStatusSub = this.authService.getAuthStatusListener()\r\n    .subscribe(isAuthenticated=>{\r\n      this.userIsAuthenticated = isAuthenticated;\r\n      this.userId = this.authService.getUserId();\r\n    });\r\n    //this.Loading = true;\r\n  }\r\n\r\n  onChangedPage(pageData: PageEvent){\r\n\r\n    //this.Loading = true;\r\n     console.log(pageData);\r\n     //console.log(\"hhhhh\");\r\n    this.currentpage = pageData.pageIndex+1;\r\n    this.postperpage = pageData.pageSize;\r\n    this.postsService.getPosts(this.postperpage, this.currentpage);\r\n\r\n  }\r\n\r\n\r\n // onDelete(postId: string){\r\n   // this.postsService.deletePost(postId);\r\n\r\n // }\r\n  onDelete(postId: string){\r\n\r\n    //this.Loading = true;\r\n    //pageData: PageEvent;\r\n    //let aa;\r\n    this.postsService.deletePost(postId)\r\n      .subscribe(()=>{\r\n\r\n       this.postsService.getPosts(this.postperpage, this.currentpage);\r\n\r\n        //this.router.navigate([\"/\"]);\r\n      });\r\n\r\n\r\n     // this.ngOnInit();\r\n      //this.router.navigate([\"/\"]);\r\n  }\r\n\r\n  ngOnDestroy(){\r\n\r\n    this.PostSub.unsubscribe();\r\n    this.authStatusSub.unsubscribe();\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n","\r\n<mat-spinner *ngIf = \"Loading\"></mat-spinner>\r\n<mat-accordion multi= \"true\" *ngIf = \"posts.length > 0 && !Loading\">\r\n  <mat-expansion-panel *ngFor = \"let post of posts\" >\r\n    <mat-expansion-panel-header>\r\n    {{post.title}}\r\n    </mat-expansion-panel-header>\r\n    <div class= \"post-image\">\r\n      <img [src]= \"post.imagePath\" [alt]= \"post.title\">\r\n    </div>\r\n    <p>{{post.content}}</p>\r\n    <mat-action-row *ngIf= \"userIsAuthenticated && userId === post.creator\">\r\n      <a mat-button color=\"primary\" [routerLink] = \"['/edit',post.id]\">EDIT</a>\r\n      <button mat-button color= \"warn\"(click) = \"onDelete(post.id)\" > DELETE </button>\r\n    </mat-action-row>\r\n  </mat-expansion-panel>\r\n\r\n\r\n</mat-accordion>\r\n\r\n  <mat-paginator [length]= \"totalposts\" [pageSize]= \"postperpage\"\r\n  [pageSizeOptions]= \"pageSizeOption\" (page)= \"onChangedPage($event)\" *ngIf = \"posts.length > 0\">\r\n  </mat-paginator>\r\n\r\n<p class = \" info-text mat-body-1\" *ngIf = \"posts.length <= 0\">No post added yet!</p>\r\n\r\n","import{Post} from './post.model';\r\nimport {Injectable} from '@angular/core';\r\nimport {Subject} from 'rxjs';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport{map} from 'rxjs/operators';\r\nimport {Router} from '@angular/router';\r\nimport { ActivatedRoute,ParamMap } from '@angular/router';\r\n\r\n@Injectable({providedIn: 'root'})\r\n\r\nexport class PostService{\r\n\r\n   posts: Post[] = [];\r\n  postUpdated = new Subject<{posts: Post[], postCount: number}>();\r\n // private postUpdated = new Subject<Post[]>();\r\n\r\n  constructor(private http: HttpClient, private router: Router){}\r\n\r\n\r\n // getPosts(){\r\n    getPosts(pagesize: number, currentpage: number){\r\n    const queryParams = '?pagesize='+pagesize+'&'+'currentpage='+currentpage;\r\n    this.http.get<{message: string, posts: Post[], maxPosts: number}>('/api/posts'+ queryParams)\r\n   // this.postsService.getPost(this.postId).subscribe(postData=>{\r\n\r\n    //.pipe(map((postData)=>{\r\n\r\n      //return postData.posts.map(post=>{\r\n        //return{\r\n          //title:post.title,\r\n          //content:post.content,\r\n          //id:post._id,\r\n          //imagePath:post.imagePath\r\n\r\n    //};\r\n//});\r\n//maxPosts: postData.maxPosts\r\n\r\n   // }))\r\n   .pipe(\r\n    map(postData=>{\r\n      return {\r\n        posts: postData.posts.map(post=>{\r\n          return{\r\n            title: post.title,\r\n            content:post.content,\r\n            id:post._id,\r\n            imagePath: post.imagePath,\r\n            creator: post.creator,\r\n            _id:null\r\n          };\r\n        }),\r\n        maxPosts: postData.maxPosts\r\n      };\r\n    })\r\n  )\r\n    //.subscribe((transformedPost)=>{\r\n      //this.posts = transformedPost;\r\n     // this.postUpdated.next([...this.posts]);\r\n\r\n\r\n   // });\r\n   .subscribe((transformedPostsData)=>{\r\n    console.log(transformedPostsData);\r\n    this.posts = transformedPostsData.posts;\r\n    this.postUpdated.next({\r\n\r\n      posts: [...this.posts],\r\n      postCount: transformedPostsData.maxPosts\r\n    });\r\n\r\n});\r\n\r\n  }\r\n\r\n\r\n\r\n  //addPost(title: string, content: string){\r\n    addPost(title: string, content: string, image: File){\r\n\r\n    //const post: Post={id:null,title: title, content: content};\r\n    //const post: Post = {id:null, title:title, content:content, imagePath: null};\r\n    //Post.append(\"image\",Image,title);\r\n    //////////////////////////////////////////////////////////////////////\r\n    const postData = new FormData();\r\n\r\n    postData.append(\"title\",title);\r\n    postData.append(\"content\",content);\r\n    postData.append(\"image\", image, title);\r\n\r\n\r\n    this.http.post<{\r\n      message: string, post: Post}>(\r\n        '/api/posts',\r\n        postData\r\n      )\r\n    .subscribe((responseData)=>{\r\n     // const post: Post = {\r\n       // id:responseData.post.id,\r\n       // title: title,\r\n        //content: content,\r\n      //  imagePath: responseData.post.imagePath\r\n      //};\r\n     // this.posts.push(post);\r\n      //this.postUpdated.next([...this.posts]);\r\n      this.router.navigate([\"/\"]);\r\n\r\n    });\r\n\r\n/*\r\n    this.http.post<{message: string, postId: string}>('http://localhost:3000/api/posts',postData)\r\n    .subscribe((responseData)=>{\r\n     // const post: Post = {id:responseData.postId, title: title, content: content};\r\n\r\n     const post: Post = {id:responseData.postId, title: title, content: content};\r\n\r\n      this.posts.push(post);\r\n      this.postUpdated.next([...this.posts]);\r\n      this.router.navigate([\"/\"]);\r\n\r\n\r\n      // const post: Post = {\r\n      //   id:responseData.post.id,\r\n      //   title: title,\r\n      //   content: content,\r\n      //   imagePath: responseData.post.imagePath\r\n      // }\r\n      });*/\r\n    ///////////////////////////////////////////////////////////////////////\r\n    // this.http.post<{message: string, postId:string}>('http://localhost:3000/api/posts',post)\r\n    // .subscribe(( responseData)=>{\r\n\r\n    //   const id = responseData.postId;\r\n    //   post.id = id;\r\n    //   this.posts.push(post);\r\n    //   this.postUpdated.next([...this.posts]);\r\n\r\n    // });\r\n\r\n}\r\n\r\n//updatePost( id: string, title:string, content:string, imagePath: string){\r\n  //updatePost( id: string, title:string, content:string, image: File|string) {\r\n // const post: Post = {id:id, title:title, content:content, imagePath: null};\r\n updatePost( id:string, title:string, content:string, image: File|string){\r\n\r\n  let postData: Post|FormData;\r\n\r\n  if(typeof(image) == 'object'){\r\n   postData = new FormData();\r\n    postData.append(\"id\", id);\r\n    postData.append(\"title\", title);\r\n    postData.append(\"content\", content);\r\n    postData.append(\"image\", image, title);\r\n    //postData.append(\"creator\", creator);\r\n\r\n  }else{\r\n\r\n    postData = {\r\n      id: id,\r\n      title: title,\r\n      content: content,\r\n      imagePath: image,\r\n      creator: null,\r\n      _id:null\r\n    }\r\n\r\n  }\r\n\r\n /* this.http.put(\"http://localhost:3000/api/posts/\"+id,post)\r\n  //.subscribe(response =>console.log(response));\r\n  .subscribe(response =>{\r\n    const updatedPosts = [...this.posts];\r\n    const oldPostIndex = updatedPosts.findIndex(p=> p.id===post.id);\r\n    updatedPosts[oldPostIndex] = post;*/\r\n\r\n    this.http.put(\"/api/posts/\"+id,postData)\r\n    .subscribe(response =>{\r\n     // const updatedPosts = [...this.posts];\r\n     //const oldPostIndex = updatedPosts.findIndex(p=> p.id===id);\r\n      ///const post: Post ={\r\n        //id: id,\r\n       // title: title,\r\n      //  content: content,\r\n       // imagePath:response.imagePath\r\n     // }\r\n      //updatedPosts[oldPostIndex] = post;\r\n     // this.posts = updatedPosts;\r\n      //this.postUpdated.next([...this.posts]);\r\n      this.router.navigate([\"/\"]);\r\n  });\r\n}\r\n\r\n//deletePost(postId:string){\r\n  //this.http.delete(\"http://localhost:3000/api/posts/\"+postId)\r\n // .subscribe(()=>{\r\n   // const updatedPosts = this.posts.filter(post=>post.id!==postId);\r\n    //this.posts=updatedPosts;\r\n   // this.postUpdated.next([...this.posts]);\r\n//});\r\n//}\r\ndeletePost(postId:string){\r\n  return this.http.delete(\"/api/posts/\"+postId);\r\n}\r\n\r\ngetPostUpdateListenetr(){\r\n  return this.postUpdated.asObservable();\r\n}\r\n\r\ngetPost(id: string){\r\n    return this.http.get<{_id: string, title: string, content:string, imagePath: string,creator: string}>(\"/api/posts/\"+id);\r\n\r\n//  return this.http.get<{_id: string, title: string, content:string, imagePath: string}>(\"http://localhost:3000/api/posts/\"+id);\r\n\r\n\r\n  //return {...this.posts.find(p =>p.id ===id)};\r\n/*this.http.get<{message: String, posts: any}>(\"http://localhost:3000/api/posts/\"+id).pipe(map((postData)=>{\r\n\r\nreturn postData.posts.map(post=>{\r\n\r\n  return{\r\n\r\n    title: post.title,\r\n    content: post.content,\r\n    id: post._id,\r\n    imagePath: post.imagePath\r\n  }\r\n})\r\n}))*/\r\n\r\n}\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}